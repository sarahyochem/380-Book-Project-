[["index.html", "Econ 380 Book Project General Notes", " Econ 380 Book Project 380 Student 2021-01-10 17:00:44 General Notes After you get started with your BP you can delete everything from here down in this file (including this sentence…but leave the part above.) Make sure to open _bookdown.yml and update the 3 URLs to replace “YOUR REPO NAME” with the name of your repo. The first file in bookdown is always index.rmd (and the resulting output file, index.html, is the first file GitHub pages will display). Thus, this must be the first file of your book. You can use this first chapter however you want. I suggest adding additional notes that don’t fit specifically in other parts of your book. Note that you can cross-reference headings (and sub-headings, and 3rd level headings, etc). For example, here’s a cross-reference to the Intermediate R chapter: Intermediate R. You can also cross-reference with a custom name, such as this is a link to the Intermediate R chapter.1 I would leave the author as “380 Student” so that your BP remains anonymous, even when displayed online via GitHub Pages. See here for more details.↩︎ "],["introduction-to-r.html", "1 Introduction to R 1.1 Intro to basics 1.2 Vectors 1.3 Matrices 1.4 Factors 1.5 Data frames 1.6 Lists", " 1 Introduction to R https://learn.datacamp.com/courses/free-introduction-to-r (Note: If you do Introduction to R for Finance instead, change the title of this bookdown chapter above and change the DataCamp chapter titles below. Whichever version of Intro to R you do, delete this note) 1.1 Intro to basics 1.2 Vectors 1.3 Matrices 1.4 Factors 1.5 Data frames 1.6 Lists "],["intermediate-r.html", "2 Intermediate R 2.1 Conditionals and Control Flow 2.2 Loops 2.3 Functions 2.4 The apply family 2.5 Utilities", " 2 Intermediate R https://learn.datacamp.com/courses/intermediate-r (Note: If you do Intermediate R for Finance instead, change the title of this bookdown chapter above and change the DataCamp chapter titles below. Whichever version of Intermediate R you do, delete this note) 2.1 Conditionals and Control Flow 2.2 Loops 2.3 Functions 2.4 The apply family 2.5 Utilities "],["intro-to-the-tidyverse.html", "3 Intro to the Tidyverse 3.1 Data wrangling 3.2 Data visualization 3.3 Grouping and summarizing 3.4 Types of visualizations", " 3 Intro to the Tidyverse https://learn.datacamp.com/courses/introduction-to-the-tidyverse 3.1 Data wrangling 3.2 Data visualization 3.3 Grouping and summarizing 3.4 Types of visualizations "],["intro-to-data-visualization-with-ggplot2.html", "4 Intro to Data Visualization with ggplot2 4.1 Introduction 4.2 Aesthetics 4.3 Geometries 4.4 Themes", " 4 Intro to Data Visualization with ggplot2 https://learn.datacamp.com/courses/introduction-to-data-visualization-with-ggplot2 4.1 Introduction 4.2 Aesthetics 4.3 Geometries 4.4 Themes "],["working-with-data-in-the-tidyverse.html", "5 Working with Data in the Tidyverse 5.1 Explore your data 5.2 Tame your data 5.3 Tidy your data 5.4 Transform your data", " 5 Working with Data in the Tidyverse https://learn.datacamp.com/courses/working-with-data-in-the-tidyverse 5.1 Explore your data 5.2 Tame your data 5.3 Tidy your data 5.4 Transform your data "],["categorical-data-in-the-tidyverse.html", "6 Categorical Data in the Tidyverse 6.1 Introduction to Factor Variables 6.2 Manipulating Factor Variables 6.3 Creating Factor Variables 6.4 Case Study on Flight Etiquette", " 6 Categorical Data in the Tidyverse https://learn.datacamp.com/courses/categorical-data-in-the-tidyverse 6.1 Introduction to Factor Variables 6.2 Manipulating Factor Variables 6.3 Creating Factor Variables 6.4 Case Study on Flight Etiquette "],["data-manipulation-with-dplyr.html", "7 Data Manipulation with dplyr 7.1 Transforming Data with dplyr 7.2 Aggregating Data 7.3 Selecting and Transforming Data 7.4 Case Study: The babynames Dataset", " 7 Data Manipulation with dplyr https://learn.datacamp.com/courses/data-manipulation-with-dplyr 7.1 Transforming Data with dplyr 7.2 Aggregating Data 7.3 Selecting and Transforming Data 7.4 Case Study: The babynames Dataset "],["joining-data-with-dplyr.html", "8 Joining Data with dplyr 8.1 Joining Tables 8.2 Left and Right Joins 8.3 Full, Semi, and Anti Joins 8.4 Case Study: Joins on Stack Overflow Data", " 8 Joining Data with dplyr https://learn.datacamp.com/courses/joining-data-with-dplyr 8.1 Joining Tables 8.2 Left and Right Joins 8.3 Full, Semi, and Anti Joins 8.4 Case Study: Joins on Stack Overflow Data "],["cleaning-data-in-r.html", "9 Cleaning Data in R 9.1 Common Data Problems 9.2 Categorical and Text Data 9.3 Advanced Data Problems 9.4 Record Linkage", " 9 Cleaning Data in R https://learn.datacamp.com/courses/cleaning-data-in-r 9.1 Common Data Problems 9.2 Categorical and Text Data 9.3 Advanced Data Problems 9.4 Record Linkage "],["introduction-to-sql.html", "10 Introduction to SQL 10.1 Selecting columns 10.2 Filtering rows 10.3 Aggregate Functions 10.4 Aggregate Functions", " 10 Introduction to SQL https://learn.datacamp.com/courses/introduction-to-sql 10.1 Selecting columns 10.2 Filtering rows 10.3 Aggregate Functions 10.4 Aggregate Functions "],["joining-data-in-sql.html", "11 Joining Data in SQL 11.1 Introduction to joins 11.2 Outer joins and cross joins 11.3 Set theory clauses 11.4 Subqueries", " 11 Joining Data in SQL https://learn.datacamp.com/courses/joining-data-in-postgresql 11.1 Introduction to joins 11.2 Outer joins and cross joins 11.3 Set theory clauses 11.4 Subqueries "],["web-scraping-in-r.html", "12 Web Scraping in R 12.1 Introduction to HTML and Web Scraping 12.2 Navigation and Selection with CSS 12.3 Advanced Selection with XPATH 12.4 Scraping Best Practices", " 12 Web Scraping in R https://learn.datacamp.com/courses/web-scraping-in-r 12.1 Introduction to HTML and Web Scraping 12.2 Navigation and Selection with CSS 12.3 Advanced Selection with XPATH 12.4 Scraping Best Practices "],["ch-2-slr.html", "13 Ch 2 - SLR 13.1 Notes 13.2 Example 2.3: CEO Salary and Return on Equity 13.3 Example 2.4: Wage and Education 13.4 Example 2.5: Voting Outcomes and Campaign Expenditures 13.5 Example of Fitted Values (\\(\\hat{y}\\))", " 13 Ch 2 - SLR In the second part of your book you will have chapters for main topics we cover. For each, you will replicate empirical examples from the textbook. The second-level headings (i.e., those with 2 hash tags that show up in the navigation bar of the html files) in each file are labeled with the examples you should replicate. The data is loaded for you using the the wooldridge package (the wooldridge package has datasets from Wooldridge Introductory Economics 6th edition). I also suggest that you add notes on each chapter, but doing so is optional (except if I specify that notes are required). For this chapter, you should do the simple linear regressions from the examples. For each, you should make sure you get the same results as in the example and understand the discussion of the example in the textbook. For this chapter, you should also use ggplot to create a scatter plot of the x and y variables used in the regression, and include a linear regression line. So I suggest doing this chapter after you complete the DataCamp course and your notes on Intro to Data Visualization with ggplot2. These are the packages you will need: library(wooldridge) library(ggplot2) library(pander) For displaying the results of a single regression, you should use the pander package as shown in example 2.3 below. (Later in 380 you will be comparing several regression models side-by-side and will be using the stargazer package instead, but for a single regression model this works well). I completed the first example (Example 2.3: CEO Salary and Return on Equity) for you to demonstrate what you need to do. For the subsequent examples you should fill in the code yourself. I’ve provided the template for you and included the code to load the data. I then added a comment that says “YOUR CODE GOES HERE” wherever you are supposed to add code. You should use the example I did for you as a guide. What you do later in 380 will not be as simple as copy/pasting code I give you and changing a few variable names, for for this chapter as you’re first learning what to do, it’s exactly that easy. Don’t overthink what you’re being asked to do. That said, you are of course welcome to add more if it will help you. You can add more regressions. You can explore the changes of units I talk about in LN2.7. You can experiment with log transformations shown in the later parts of chapter 2 (we’ll talk about these later with chapter 3). But the only things you’re required to do for the BP are the 2 examples I left for you below. 13.1 Notes Optionally, you can add notes here on chapter 2’s (and LN2’s) content. 13.2 Example 2.3: CEO Salary and Return on Equity Load the data from wooldridge package, estimate the regression, and display the results # Load data data(ceosal1) # Estimate regression model ex2.3 &lt;- lm(salary ~ roe, data=ceosal1) # Display model results pander(summary(ex2.3)) Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 963.2 213.2 4.517 1.053e-05 roe 18.5 11.12 1.663 0.09777 Fitting linear model: salary ~ roe Observations Residual Std. Error \\(R^2\\) Adjusted \\(R^2\\) 209 1367 0.01319 0.008421 Display a scatter plot with regression line corresponding to this model ggplot(data=ceosal1, aes(x=roe, y=salary)) + geom_point() + geom_smooth(method = &quot;lm&quot;, se=FALSE) ## `geom_smooth()` using formula &#39;y ~ x&#39; 13.3 Example 2.4: Wage and Education Load the data from wooldridge package, estimate the regression, and display the results # Load data data(wage1) # Estimate regression model # YOUR CODE GOES HERE # Display model results # YOUR CODE GOES HERE Display a scatter plot with regression line corresponding to this model # YOUR CODE GOES HERE 13.4 Example 2.5: Voting Outcomes and Campaign Expenditures Load the data from wooldridge package, estimate the regression, and display the results # Load data data(vote1) # Estimate regression model # YOUR CODE GOES HERE # Display model results # YOUR CODE GOES HERE Display a scatter plot with regression line corresponding to this model # YOUR CODE GOES HERE 13.5 Example of Fitted Values (\\(\\hat{y}\\)) This example builds off of Example 2.3: CEO Salary and Return on Equity above. You don’t need to do anything for these, but you should look at them to make sure you understand them. First, you should understand how to calculate the OLS fitted values, the \\(\\hat{y}\\) values. Below you’ll see two ways to do so. The first is to manually use the OLS regression equation: \\[ \\hat{y}_i = \\hat{\\beta}_0 + \\hat{\\beta}_1 x_i \\] After estimating a model, you can use the coef() function to get the values of \\(\\hat{\\beta}_0\\) and \\(\\hat{\\beta}_1\\). We estimated the model above and stored it into the variable ex2.3. We can access \\(\\hat{\\beta}_0\\) with coef(ex2.3)[\"(Intercept)\"] or coef(ex2.3)[1]. We can access the first (and only) \\(x\\) variable is named roe, and \\(\\hat{\\beta}_1\\) is coef(ex2.3)[\"roe\"] or coef(ex2.3)[1]. ceosal1$salaryHat &lt;- coef(ex2.3)[&quot;(Intercept)&quot;] + coef(ex2.3)[&quot;roe&quot;] * ceosal1$roe The second way is by using the fitted() function. ceosal1$salaryHat_fitted &lt;- fitted(ex2.3) You can check that these two are the same by subtracting them and making sure they are all the same. ceosal1$dif &lt;- ceosal1$salaryHat - ceosal1$salaryHat_fitted summary(ceosal1$dif) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## -2.046e-12 0.000e+00 0.000e+00 1.469e-14 0.000e+00 1.592e-12 Note that the min is -0.000000000002046363 and the max is 0.000000000001591616. Algebra with decimal numbers often results in small rounding errors, which is why these are 0 exactly, but they are effectively 0, demonstrating that the two methods of calculating the fitted \\((\\hat{y})\\) values are the same. The second reason I’m including this example is to demonstrate plotting the fitted \\((\\hat{y})\\) values. The black circles are the data. The red x’s are the predicted \\((\\hat{y})\\) values (in this setting, “predicted values” and “fitted” values and \\((\\hat{y})\\) all mean the same thing). The blue line is the OLS regression line. You should understand why all of the red x’s are on the blue line. ggplot(data=ceosal1, aes(x=roe, y=salary)) + geom_point(aes(color=&quot;data&quot;,shape=&quot;data&quot;)) + geom_point(aes(x=roe, y=salaryHat,color=&quot;predicted (yHat)&quot;,shape=&quot;predicted (yHat)&quot;)) + geom_smooth(method = &quot;lm&quot;,color=&quot;blue&quot;, se=FALSE,aes(linetype=&quot;OLS&quot;)) + scale_color_manual(values = c(&quot;black&quot;, &quot;red&quot;),name=&quot;Values&quot;) + scale_shape_manual(values = c(1,4),name=&quot;Values&quot;) + scale_linetype_manual(values = c(&quot;solid&quot;,&quot;solid&quot;), name=&quot;Regression Line&quot;) ## `geom_smooth()` using formula &#39;y ~ x&#39; "]]
